{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-2a",
    "CidrBlock": "10.0.0.0/20",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ],
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-2b",
    "CidrBlock": "10.0.16.0/20",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-2a",
    "CidrBlock": "10.0.64.0/20",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-2b",
    "CidrBlock": "10.0.80.0/20",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Infra/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Vpc/VPCGW"
   }
  },
  "CacheSecurityGroup79A9F160": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Infra/Cache/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":6379"
        ]
       ]
      },
      "FromPort": 6379,
      "IpProtocol": "tcp",
      "ToPort": 6379
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Cache/SecurityGroup/Resource"
   }
  },
  "CacheSubnetGroup355C216D": {
   "Type": "AWS::ElastiCache::SubnetGroup",
   "Properties": {
    "Description": "Subnet group for Redis",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateSubnet1Subnet536B997A"
     },
     {
      "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Cache/SubnetGroup"
   }
  },
  "CacheCacheCluster4CE733EC": {
   "Type": "AWS::ElastiCache::CacheCluster",
   "Properties": {
    "CacheNodeType": "cache.t3.micro",
    "CacheSubnetGroupName": {
     "Ref": "CacheSubnetGroup355C216D"
    },
    "Engine": "redis",
    "NumCacheNodes": 1,
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "CacheSecurityGroup79A9F160",
       "GroupId"
      ]
     }
    ]
   },
   "DependsOn": [
    "CacheSubnetGroup355C216D"
   ],
   "Metadata": {
    "aws:cdk:path": "Infra/Cache/CacheCluster"
   }
  },
  "DatastoreSecurityGroupCE35AFCE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Infra/Datastore/SecurityGroup",
    "GroupName": "database-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":5432"
        ]
       ]
      },
      "FromPort": 5432,
      "IpProtocol": "tcp",
      "ToPort": 5432
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Datastore/SecurityGroup/Resource"
   }
  },
  "DatastoreSecurityGroupfromInfraBastionBastionSecurityGroup6A1C19875432E7A2674C": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from InfraBastionBastionSecurityGroup6A1C1987:5432",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "DatastoreSecurityGroupCE35AFCE",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "BastionBastionSecurityGroupED5052E4",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Datastore/SecurityGroup/from InfraBastionBastionSecurityGroup6A1C1987:5432"
   }
  },
  "DatastoreSecret484DC6FB": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Infra/Datastore/Secret/Resource"
   }
  },
  "DatastoreSecretAttachment8FFD1448": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "DatastoreSecret484DC6FB"
    },
    "TargetId": {
     "Ref": "DatastoreDatabaseInstanceBB780F49"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Datastore/Secret/Attachment/Resource"
   }
  },
  "DatastoreParameterGroup7515625B": {
   "Type": "AWS::RDS::DBParameterGroup",
   "Properties": {
    "Description": "Parameter group for postgres16",
    "Family": "postgres16",
    "Parameters": {
     "rds.force_ssl": "0",
     "log_connections": "1",
     "log_disconnections": "1",
     "max_connections": "100"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Datastore/ParameterGroup/Resource"
   }
  },
  "DatastoreDatabaseInstanceSubnetGroupB200FDB2": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for DatabaseInstance database",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateSubnet1Subnet536B997A"
     },
     {
      "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Infra/Datastore/DatabaseInstance/SubnetGroup/Default"
   }
  },
  "DatastoreDatabaseInstanceBB780F49": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "100",
    "BackupRetentionPeriod": 30,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t4g.micro",
    "DBName": "bifrost",
    "DBParameterGroupName": {
     "Ref": "DatastoreParameterGroup7515625B"
    },
    "DBSubnetGroupName": {
     "Ref": "DatastoreDatabaseInstanceSubnetGroupB200FDB2"
    },
    "DeletionProtection": true,
    "EnableIAMDatabaseAuthentication": true,
    "Engine": "postgres",
    "EngineVersion": "16",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DatastoreSecret484DC6FB"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DatastoreSecret484DC6FB"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MultiAZ": true,
    "Port": "5432",
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "DatastoreSecurityGroupCE35AFCE",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Infra/Datastore/DatabaseInstance/Resource"
   }
  },
  "S3InstanceBucket2795465C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "bifrost-bucket-340752840444",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 90
       },
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        }
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Infra/S3Instance/Bucket/Resource"
   }
  },
  "S3InstanceBucketPolicy57514087": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "S3InstanceBucket2795465C"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "S3InstanceBucket2795465C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "S3InstanceBucket2795465C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/S3Instance/Bucket/Policy/Resource"
   }
  },
  "S3InstanceBucketAutoDeleteObjectsCustomResource3141E9FE": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "S3InstanceBucket2795465C"
    }
   },
   "DependsOn": [
    "S3InstanceBucketPolicy57514087"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Infra/S3Instance/Bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-340752840444-us-east-2",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "S3InstanceBucket2795465C"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "Infra/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "bifrost-cluster"
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Cluster/Resource"
   }
  },
  "BastionBastionSecurityGroupED5052E4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Infra/Bastion/BastionSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH access",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Bastion/BastionSecurityGroup/Resource"
   }
  },
  "BastionBastionHostRoleB63284AC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/SecretsManagerReadWrite"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Bastion/BastionHostRole/Resource"
   }
  },
  "BastionBastionHostInstanceProfile16269906": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "BastionBastionHostRoleB63284AC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Infra/Bastion/BastionHost/InstanceProfile"
   }
  },
  "BastionBastionHost46653B97": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "us-east-2a",
    "IamInstanceProfile": {
     "Ref": "BastionBastionHostInstanceProfile16269906"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.medium",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "BastionBastionSecurityGroupED5052E4",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Infra/Bastion/BastionHost"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "BastionBastionHostRoleB63284AC"
   ],
   "Metadata": {
    "aws:cdk:path": "Infra/Bastion/BastionHost/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31Sy27CMBD8Fu7GhXDomUeFuFQRQVyrjVmCIbHR7hqEovx7FQxJRdWeZnf2NR450eP3iR4N4MpDszsNS5vrOhMwJwVX/qrRJLreno2a7902nas05KU1WcgdSsv10doHwQ3kJfZ8z02ZvbEg1ruuuQ0+VmkLnyBLELzCTaVkLyDYL145QXLYNUQlj2wqAuZQoROVoQlk5bYkH853Df8SK1cQMquVYwFnMJ6KcaOwBBZrwBxQ1917uk3ztjAvAwtSo2jHul6AQA6MGRpCUSkQVChI3cxi9sI9JzoFL0cWs19EL5DvZ7gCBwVS1BgvR9gAFSg/7OkaXiuN4omuZ8Gcot+PKELqS2tuPR3zRqFhXT8MuBvy9MJCpeu1j7/giU/ZKfm9LbFp1BrZB2pdDyy+6tO9+6OUkr/YHdIMGNWUGSUTKKwr2pnO2UY5v0N95LdLkuhxokeDI1s7pODEVqjXEb8BVPDQmfcCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "Infra/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/canonical/ubuntu/server/focal/stable/current/amd64/hvm/ebs-gp2/ami-id"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "ExportsOutputFnGetAttS3InstanceBucket2795465CArn150C7A40": {
   "Value": {
    "Fn::GetAtt": [
     "S3InstanceBucket2795465C",
     "Arn"
    ]
   },
   "Export": {
    "Name": "Infra:ExportsOutputFnGetAttS3InstanceBucket2795465CArn150C7A40"
   }
  },
  "ExportsOutputFnGetAttDatastoreDatabaseInstanceBB780F49DbiResourceIdADD14C80": {
   "Value": {
    "Fn::GetAtt": [
     "DatastoreDatabaseInstanceBB780F49",
     "DbiResourceId"
    ]
   },
   "Export": {
    "Name": "Infra:ExportsOutputFnGetAttDatastoreDatabaseInstanceBB780F49DbiResourceIdADD14C80"
   }
  },
  "ExportsOutputRefDatastoreSecretAttachment8FFD14483A3BB3C3": {
   "Value": {
    "Ref": "DatastoreSecretAttachment8FFD1448"
   },
   "Export": {
    "Name": "Infra:ExportsOutputRefDatastoreSecretAttachment8FFD14483A3BB3C3"
   }
  },
  "ExportsOutputRefClusterEB0386A796A0E3FE": {
   "Value": {
    "Ref": "ClusterEB0386A7"
   },
   "Export": {
    "Name": "Infra:ExportsOutputRefClusterEB0386A796A0E3FE"
   }
  },
  "ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940": {
   "Value": {
    "Ref": "VpcPrivateSubnet1Subnet536B997A"
   },
   "Export": {
    "Name": "Infra:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940"
   }
  },
  "ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3": {
   "Value": {
    "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
   },
   "Export": {
    "Name": "Infra:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3"
   }
  },
  "ExportsOutputRefVpc8378EB38272D6E3A": {
   "Value": {
    "Ref": "Vpc8378EB38"
   },
   "Export": {
    "Name": "Infra:ExportsOutputRefVpc8378EB38272D6E3A"
   }
  },
  "ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456": {
   "Value": {
    "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
   },
   "Export": {
    "Name": "Infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
   }
  },
  "ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740": {
   "Value": {
    "Ref": "VpcPublicSubnet2Subnet691E08A3"
   },
   "Export": {
    "Name": "Infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}