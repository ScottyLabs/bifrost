{
 "Resources": {
  "Certificate4E7ABB08": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "api.tartanhacks.com",
    "DomainValidationOptions": [
     {
      "DomainName": "api.tartanhacks.com",
      "HostedZoneId": "Z008214122BRQW52ZL314"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "Backend/Certificate"
     }
    ],
    "ValidationMethod": "DNS"
   },
   "Metadata": {
    "aws:cdk:path": "Backend/Certificate/Resource"
   }
  },
  "LogGroupF5B46931": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/ecs/backend",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Backend/LogGroup/Resource"
   }
  },
  "TaskRole30FC0FBB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "backend-fargate-task-role"
   },
   "Metadata": {
    "aws:cdk:path": "Backend/TaskRole/Resource"
   }
  },
  "TaskRoleDefaultPolicy07FC53DE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "Secrets:ExportsOutputRefCommonSecrets1268EA15A0823179"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "Secrets:ExportsOutputRefbackendSecretsC677EF31A0FA30C1"
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "Infra:ExportsOutputFnGetAttS3InstanceBucket2795465CArn150C7A40"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "Infra:ExportsOutputFnGetAttS3InstanceBucket2795465CArn150C7A40"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "rds-db:connect",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":rds-db:us-east-2:340752840444:dbuser:",
          {
           "Fn::ImportValue": "Infra:ExportsOutputFnGetAttDatastoreDatabaseInstanceBB780F49DbiResourceIdADD14C80"
          },
          "/{{resolve:secretsmanager:",
          {
           "Fn::ImportValue": "Infra:ExportsOutputRefDatastoreSecretAttachment8FFD14483A3BB3C3"
          },
          ":SecretString:username::}}"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TaskRoleDefaultPolicy07FC53DE",
    "Roles": [
     {
      "Ref": "TaskRole30FC0FBB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Backend/TaskRole/DefaultPolicy/Resource"
   }
  },
  "TaskDefinitionB36D86D9": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         "340752840444.dkr.ecr.us-east-2.",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/bifrost-backend:latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "LogGroupF5B46931"
        },
        "awslogs-stream-prefix": "backend",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "bifrost-resource-app",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "1024",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "TaskDefinitionExecutionRole8D61C2FB",
      "Arn"
     ]
    },
    "Family": "backend",
    "Memory": "4096",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskRole30FC0FBB",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Backend/TaskDefinition/Resource"
   }
  },
  "TaskDefinitionExecutionRole8D61C2FB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Backend/TaskDefinition/ExecutionRole/Resource"
   }
  },
  "TaskDefinitionExecutionRoleDefaultPolicy1F3406F5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:us-east-2:340752840444:repository/bifrost-backend"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LogGroupF5B46931",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TaskDefinitionExecutionRoleDefaultPolicy1F3406F5",
    "Roles": [
     {
      "Ref": "TaskDefinitionExecutionRole8D61C2FB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Backend/TaskDefinition/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ServiceD69D759B": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "Infra:ExportsOutputRefClusterEB0386A796A0E3FE"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 2,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "bifrost-resource-app",
      "ContainerPort": 8080,
      "TargetGroupArn": {
       "Ref": "LoadBalancerListenerListenerTargetGroup3D7E246E"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ServiceSecurityGroupC96ED6A7",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "Infra:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940"
       },
       {
        "Fn::ImportValue": "Infra:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3"
       }
      ]
     }
    },
    "ServiceName": "backend-service",
    "TaskDefinition": {
     "Ref": "TaskDefinitionB36D86D9"
    }
   },
   "DependsOn": [
    "LoadBalancerListenerListenerTargetGroup3D7E246E",
    "LoadBalancerListenerE1A099B9",
    "TaskRoleDefaultPolicy07FC53DE",
    "TaskRole30FC0FBB"
   ],
   "Metadata": {
    "aws:cdk:path": "Backend/Service/Service"
   }
  },
  "ServiceSecurityGroupC96ED6A7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Backend/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "Infra:ExportsOutputRefVpc8378EB38272D6E3A"
    }
   },
   "DependsOn": [
    "TaskRoleDefaultPolicy07FC53DE",
    "TaskRole30FC0FBB"
   ],
   "Metadata": {
    "aws:cdk:path": "Backend/Service/SecurityGroup/Resource"
   }
  },
  "ServiceSecurityGroupfromBackendLoadBalancerSecurityGroup060E9E9280809C1C0E15": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow ALB traffic to ECS tasks",
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "ServiceSecurityGroupC96ED6A7",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "LoadBalancerSecurityGroupA28D6DD7",
      "GroupId"
     ]
    },
    "ToPort": 8080
   },
   "DependsOn": [
    "TaskRoleDefaultPolicy07FC53DE",
    "TaskRole30FC0FBB"
   ],
   "Metadata": {
    "aws:cdk:path": "Backend/Service/SecurityGroup/from BackendLoadBalancerSecurityGroup060E9E92:8080"
   }
  },
  "LoadBalancerBE9EEC3A": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "LoadBalancerSecurityGroupA28D6DD7",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "Infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
     },
     {
      "Fn::ImportValue": "Infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "Backend/LoadBalancer/Resource"
   }
  },
  "LoadBalancerSecurityGroupA28D6DD7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB BackendLoadBalancer5DD68642",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "Infra:ExportsOutputRefVpc8378EB38272D6E3A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Backend/LoadBalancer/SecurityGroup/Resource"
   }
  },
  "LoadBalancerSecurityGrouptoBackendServiceSecurityGroupEBA5D1488080ED44BE2F": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Allow ALB traffic to ECS tasks",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ServiceSecurityGroupC96ED6A7",
      "GroupId"
     ]
    },
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "LoadBalancerSecurityGroupA28D6DD7",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 8080
   },
   "Metadata": {
    "aws:cdk:path": "Backend/LoadBalancer/SecurityGroup/to BackendServiceSecurityGroupEBA5D148:8080"
   }
  },
  "LoadBalancerListenerE1A099B9": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "Certificates": [
     {
      "CertificateArn": {
       "Ref": "Certificate4E7ABB08"
      }
     }
    ],
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "LoadBalancerListenerListenerTargetGroup3D7E246E"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "LoadBalancerBE9EEC3A"
    },
    "Port": 443,
    "Protocol": "HTTPS"
   },
   "Metadata": {
    "aws:cdk:path": "Backend/LoadBalancer/Listener/Resource"
   }
  },
  "LoadBalancerListenerListenerTargetGroup3D7E246E": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/",
    "HealthCheckProtocol": "HTTP",
    "Port": 8080,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "Infra:ExportsOutputRefVpc8378EB38272D6E3A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Backend/LoadBalancer/Listener/ListenerTargetGroup/Resource"
   }
  },
  "LoadBalancerRedirect80To443D046B531": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "RedirectConfig": {
       "Port": "443",
       "Protocol": "HTTPS",
       "StatusCode": "HTTP_301"
      },
      "Type": "redirect"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "LoadBalancerBE9EEC3A"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "Backend/LoadBalancer/Redirect80To443/Resource"
   }
  },
  "Alias325C5727": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::Join": [
       "",
       [
        "dualstack.",
        {
         "Fn::GetAtt": [
          "LoadBalancerBE9EEC3A",
          "DNSName"
         ]
        }
       ]
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "LoadBalancerBE9EEC3A",
       "CanonicalHostedZoneID"
      ]
     }
    },
    "HostedZoneId": "Z008214122BRQW52ZL314",
    "Name": "api.tartanhacks.com.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "Backend/Alias/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31QS2/CMAz+LbuHDIqmnYE9NInD1HKfTGoiQ4grJwWhKP99agus2qSd/L2cWF+hZ89zPX2Ac5iY+jBxtNWpimAOCs7hK6ERXWLDgSLLZQkBlUGJtCMDEY/gwaLotPrR1GrnRzQrxzbotGb7Ltw2nX3DWREcdSrZ9Vv9/GRH5tLRAWWFJuj0BmIh4gbC4QV35CkS+y71W2EfgTzKSLvuVignMv1PV9i9XehUoWmF4uV+3//Ch7eCIfzRX3s5K3QQIhnHUG/BgTfk7anQadE0rquE2K8Z6mXvoQyFjPg4RyGiv2ZueORvQCzG+5kjmpVwG/FprtOiRMNS9w33qMKYsyoxcCtDHzecleca9T48nopCzwo9fdgHoom0PtIRdTnMb5ziGQk1AgAA"
   },
   "Metadata": {
    "aws:cdk:path": "Backend/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}