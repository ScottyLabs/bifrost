{
  "openapi": "3.0.1",
  "info": {
    "title": "Bifrost API",
    "description": "API documentation for Bifrost",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Applications",
      "description": "Application management endpoints"
    }
  ],
  "paths": {
    "/api/users/{id}": {
      "get": {
        "tags": ["Users"],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/teams/{id}": {
      "get": {
        "tags": ["Teams"],
        "operationId": "getTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Teams"],
        "operationId": "updateTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{id}/leader/{userId}": {
      "put": {
        "tags": ["Teams"],
        "operationId": "changeLeader",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications": {
      "get": {
        "tags": ["Applications"],
        "summary": "Get user's application",
        "operationId": "getApplication",
        "responses": {
          "200": {
            "description": "Application found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "description": "No application found for user",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Applications"],
        "summary": "Update draft application",
        "operationId": "updateApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Application updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "409": {
            "description": "Application is not in DRAFT status",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Applications"],
        "summary": "Create new application",
        "operationId": "createApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Application created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "409": {
            "description": "Application already exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/webhook/registration": {
      "post": {
        "tags": ["webhook-controller"],
        "operationId": "handleRegistrationWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationWebhookPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": ["Users"],
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams": {
      "post": {
        "tags": ["Teams"],
        "operationId": "createTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{id}/members/{userId}": {
      "post": {
        "tags": ["Teams"],
        "operationId": "addMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Teams"],
        "operationId": "removeMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/submit": {
      "post": {
        "tags": ["Applications"],
        "summary": "Submit application",
        "operationId": "submitApplication",
        "responses": {
          "200": {
            "description": "Application submitted successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "Application missing required acknowledgements",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "description": "Application not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "409": {
            "description": "Application is not in DRAFT status",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["Users"],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/external/{externalId}": {
      "get": {
        "tags": ["Users"],
        "operationId": "getUserByExternalId",
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Application": {
        "required": [
          "age",
          "city",
          "createdAt",
          "codeOfConductAcknowledgement",
          "email",
          "essayQuestion1",
          "ethnicity",
          "gender",
          "grade",
          "id",
          "major",
          "mlhCodeOfConductAcknowledgement",
          "mlhTermsAndConditionsAcknowledgement",
          "name",
          "phone",
          "photoReleaseAcknowledgement",
          "previousProgrammingExperience",
          "programmingLanguages",
          "relevantCoursework",
          "resumeUrl",
          "school",
          "status",
          "travelReimbursementAcknowledgement",
          "tshirtSize",
          "updatedAt",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "school": {
            "type": "string"
          },
          "grade": {
            "type": "string",
            "enum": [
              "FRESHMAN",
              "SOPHOMORE",
              "JUNIOR",
              "SENIOR",
              "GRADUATE",
              "OTHER"
            ]
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE", "OTHER", "PREFER_NOT_TO_SAY"]
          },
          "ethnicity": {
            "type": "string",
            "enum": [
              "NATIVE_AMERICAN",
              "ASIAN_PACIFIC_ISLANDER",
              "BLACK_AFRICAN_AMERICAN",
              "HISPANIC_LATINO",
              "WHITE_CAUCASIAN",
              "MULTIPLE_OTHER",
              "PREFER_NOT_TO_SAY"
            ]
          },
          "city": {
            "type": "string"
          },
          "major": {
            "type": "string"
          },
          "relevantCoursework": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "programmingLanguages": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "previousProgrammingExperience": {
            "type": "boolean"
          },
          "essayQuestion1": {
            "type": "string"
          },
          "githubUrl": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "resumeUrl": {
            "type": "string"
          },
          "designPortfolioUrl": {
            "type": "string"
          },
          "dietaryRestrictions": {
            "type": "string"
          },
          "tshirtSize": {
            "type": "string",
            "enum": ["XS", "S", "M", "L", "XL", "XXL"]
          },
          "accessibilityNeeds": {
            "type": "string"
          },
          "travelReimbursementAcknowledgement": {
            "type": "boolean"
          },
          "travelReimbursementDetails": {
            "type": "string"
          },
          "codeOfConductAcknowledgement": {
            "type": "boolean"
          },
          "photoReleaseAcknowledgement": {
            "type": "boolean"
          },
          "mlhCodeOfConductAcknowledgement": {
            "type": "boolean"
          },
          "mlhTermsAndConditionsAcknowledgement": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "ACCEPTED",
              "REJECTED",
              "WAITLISTED",
              "WITHDRAWN"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Team": {
        "required": [
          "createdAt",
          "description",
          "id",
          "isOpen",
          "leader",
          "members",
          "name",
          "status",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "leader": {
            "$ref": "#/components/schemas/User"
          },
          "members": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "isOpen": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "LOCKED", "ARCHIVED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "open": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      },
      "User": {
        "required": [
          "accessLevels",
          "createdAt",
          "externalId",
          "id",
          "status",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["UNVERIFIED", "ACTIVE", "SUSPENDED", "BANNED", "DELETED"]
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          },
          "accessLevels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PARTICIPANT",
                "MENTOR",
                "SPONSOR",
                "JUDGE",
                "ORGANIZER",
                "ADMIN"
              ]
            }
          },
          "application": {
            "$ref": "#/components/schemas/Application"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateTeamRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          }
        }
      },
      "ApplicationRequest": {
        "required": [
          "age",
          "city",
          "codeOfConductAcknowledgement",
          "email",
          "essayQuestion1",
          "ethnicity",
          "gender",
          "grade",
          "major",
          "mlhCodeOfConductAcknowledgement",
          "mlhTermsAndConditionsAcknowledgement",
          "name",
          "phone",
          "photoReleaseAcknowledgement",
          "previousProgrammingExperience",
          "programmingLanguages",
          "relevantCoursework",
          "resumeUrl",
          "school",
          "travelReimbursementAcknowledgement",
          "tshirtSize"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "school": {
            "type": "string"
          },
          "grade": {
            "type": "string",
            "enum": [
              "FRESHMAN",
              "SOPHOMORE",
              "JUNIOR",
              "SENIOR",
              "GRADUATE",
              "OTHER"
            ]
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE", "OTHER", "PREFER_NOT_TO_SAY"]
          },
          "ethnicity": {
            "type": "string",
            "enum": [
              "NATIVE_AMERICAN",
              "ASIAN_PACIFIC_ISLANDER",
              "BLACK_AFRICAN_AMERICAN",
              "HISPANIC_LATINO",
              "WHITE_CAUCASIAN",
              "MULTIPLE_OTHER",
              "PREFER_NOT_TO_SAY"
            ]
          },
          "city": {
            "type": "string"
          },
          "major": {
            "type": "string"
          },
          "relevantCoursework": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "programmingLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "previousProgrammingExperience": {
            "type": "boolean"
          },
          "essayQuestion1": {
            "type": "string"
          },
          "githubUrl": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "resumeUrl": {
            "type": "string"
          },
          "designPortfolioUrl": {
            "type": "string"
          },
          "dietaryRestrictions": {
            "type": "string"
          },
          "tshirtSize": {
            "type": "string",
            "enum": ["XS", "S", "M", "L", "XL", "XXL"]
          },
          "accessibilityNeeds": {
            "type": "string"
          },
          "travelReimbursementAcknowledgement": {
            "type": "boolean"
          },
          "travelReimbursementDetails": {
            "type": "string"
          },
          "codeOfConductAcknowledgement": {
            "type": "boolean"
          },
          "mlhCodeOfConductAcknowledgement": {
            "type": "boolean"
          },
          "mlhTermsAndConditionsAcknowledgement": {
            "type": "boolean"
          },
          "photoReleaseAcknowledgement": {
            "type": "boolean"
          }
        }
      },
      "RegistrationWebhookPayload": {
        "required": ["userId"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        }
      },
      "CreateTeamRequest": {
        "required": ["description", "leaderId", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "leaderId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  }
}
